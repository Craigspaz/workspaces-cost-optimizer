Description: "(SO0018S) - WorkSpaces Cost Optimizer: A solution for automatically optimizing the cost of Amazon WorkSpaces version %VERSION% spoke account stack"
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  HubAccountId:
    Type: "String"
    AllowedPattern: '^\d{12}$'
    Description: "The ID of the hub account for the solution. This stack should be deployed in the same region as the hub stack in the hub account."
  LogLevel:
    Type: "String"
    Default: "INFO"
    AllowedValues:
      - "CRITICAL"
      - "ERROR"
      - "WARNING"
      - "INFO"
      - "DEBUG"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Hub account information"
        Parameters:
          - "HubAccountId"
      - Label:
          default: "Testing parameters"
        Parameters:
          - "LogLevel"
    ParameterLabels:
      HubAccountId:
        default: "Hub account ID"
      LogLevel:
        default: "Logging level"
Mappings:
  Solution:
    Data:
      ID: "SO0018S"
      Version: "%VERSION%"
      HubAccountAdminRoleName: "Workspaces-Cost-Optimizer"
      HubAccountRegistrationFunctionName: "Register-Spoke-Accounts"
      SpokeAccountWorkspacesRole: "Workspaces-Admin-Spoke"
      TagKey: "CloudFoundations:CostOptimizerForWorkspaces"
      AppRegistryApplicationName: 'workspaces-cost-optimizer'

Resources:
  WorkSpacesManagementRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS:
                - !Sub
                    - "arn:${AWS::Partition}:iam::${HubAccountId}:role/${RoleName}"
                    - RoleName: !Join [ "-", [!FindInMap [Solution, Data, "HubAccountAdminRoleName"], !Ref "AWS::Region"] ]
            Action:
              - "sts:AssumeRole"
      RoleName: !Join [ "-", [!FindInMap [Solution, Data, "SpokeAccountWorkspacesRole"], !Ref "AWS::Region"] ]
      Tags: 
        - Key: !FindInMap [Solution, Data, "TagKey"]
          Value: !Ref "AWS::StackName"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: "W28"
            reason: "Static naming is necessary for hub account to assume this role"
  WorkSpacesManagementRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "${AWS::StackName}-workspaces-management-role-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "workspaces:DescribeTags"
              - "workspaces:DescribeWorkspaces"
              - "workspaces:DescribeWorkspaceDirectories"
              - "workspaces:ModifyWorkspaceProperties"
              - "workspaces:TerminateWorkspaces"
              - "workspaces:DescribeWorkspacesConnectionStatus"
            Resource:
              - !Sub "arn:${AWS::Partition}:workspaces:*:${AWS::AccountId}:directory/*"
              - !Sub "arn:${AWS::Partition}:workspaces:*:${AWS::AccountId}:workspace/*"
              - !Sub "arn:${AWS::Partition}:workspaces:*:${AWS::AccountId}:workspacebundle/*"
          - Effect: "Allow"
            Action:
              - "cloudwatch:GetMetricStatistics"
            Resource:
              - "*"
      Roles:
        - !Ref "WorkSpacesManagementRole"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: "W12"
            reason: "CloudWatch GetMetricStatistics does not support resource level permissions"
  AccountRegistration:
    Type: "Custom::AccountRegistration"
    Properties:
      ServiceToken: !GetAtt "AccountRegistrationProvider.Arn"
    DependsOn: "AccountRegistrationProviderRolePolicy"
  AccountRegistrationProvider:
    Type: "AWS::Lambda::Function"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: "The lambda function has access to write logs"
          - id: W89
            reason: "The lambda function does not need access to resources in VPC"
          - id: "W92"
            reason: "The lambda function only executes on stack creation and deletion and so does not need reserved concurrency."
    Properties:
      Description: "WorkspacesCostOptimizer spoke account registration custom resource provider"
      Role: !GetAtt AccountRegistrationProviderRole.Arn
      Code:
        S3Bucket: !Join
          - "-"
          - - "%DIST_BUCKET_NAME%"
            - !Ref "AWS::Region"
        S3Key: "%SOLUTION_NAME%/%VERSION%/account_registration_provider.zip"
      Runtime: "python3.9"
      Handler: "account_registration_provider.account_registration_provider.event_handler"
      Timeout: 300
      Environment:
        Variables:
          LOG_LEVEL: !Ref "LogLevel"
          USER_AGENT_STRING: !Sub
            - "AwsSolution/${SolutionID}/${Version}"
            - SolutionID: !FindInMap ["Solution", "Data", "ID"]
              Version: !FindInMap ["Solution", "Data", "Version"]
          REGISTER_LAMBDA_ARN: !Sub
            - "arn:${AWS::Partition}:lambda:${AWS::Region}:${HubAccountId}:function:${FunctionName}"
            - FunctionName: !Join [ "-", [!FindInMap [Solution, Data, "HubAccountRegistrationFunctionName"], !Ref "AWS::Region"] ]
          MANAGEMENT_ROLE_ARN: !GetAtt "WorkSpacesManagementRole.Arn"
      TracingConfig:
        Mode: Active
      Tags: 
        - Key: !FindInMap [Solution, Data, "TagKey"]
          Value: !Ref "AWS::StackName"
  AccountRegistrationProviderRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Tags: 
        - Key: !FindInMap [Solution, Data, "TagKey"]
          Value: !Ref "AWS::StackName"
  AccountRegistrationProviderRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "${AWS::StackName}-account-registration-provider-role-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/${AWS::Partition}/lambda/*"
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
            Resource: !Sub
              - "arn:${AWS::Partition}:lambda:${AWS::Region}:${HubAccountId}:function:${FunctionName}"
              - FunctionName: !Join [ "-", [!FindInMap [Solution, Data, "HubAccountRegistrationFunctionName"], !Ref "AWS::Region"] ]
      Roles:
        - !Ref "AccountRegistrationProviderRole"
  
  # AppRegistry Application

  AppRegistryApplicationStackAssociation:
    Type: AWS::ServiceCatalogAppRegistry::ResourceAssociation
    Properties:
      Application:
        !Join
          - "-"
          - - !FindInMap [Solution, Data, "AppRegistryApplicationName"]
            - !Ref AWS::Region
            - !Ref HubAccountId
      Resource:
        !Ref AWS::StackId
      ResourceType: CFN_STACK

  DefaultApplicationAttributes:
    Type: AWS::ServiceCatalogAppRegistry::AttributeGroup
    Properties:
      Name: !Sub '${AWS::Region}-${AWS::StackName}'
      Description: Metadata describing the AWS solution being run
      Attributes:       
            { "ApplicationType" : "WebService",
              "Author" : "AWS",
              "Team" : "",
              "Budget" : "",
              "License" : "",
              "SecurityCategory" : "",
              "ComplianceCategory" : ""
            }
      Tags: {'CloudFoundations:CostOptimizerForWorkspaces': !Ref "AWS::StackName"}

  AppRegistryApplicationAttributeAssociation:
    Type: AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation
    Properties:
      Application:
        !Join
          - "-"
          - - !FindInMap [Solution, Data, "AppRegistryApplicationName"]
            - !Ref AWS::Region
            - !Ref HubAccountId
      AttributeGroup: !GetAtt DefaultApplicationAttributes.Id
        
Outputs:
  SolutionID:
    Value: !FindInMap ["Solution", "Data", "ID"]
  SolutionVersion:
    Value: !FindInMap ["Solution", "Data", "Version"]
  LogLevel:
    Value: !Ref "LogLevel"
